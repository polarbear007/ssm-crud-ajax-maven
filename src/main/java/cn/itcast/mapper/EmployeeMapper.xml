<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="cn.itcast.entity.Employee" >
    <id column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="first_name" property="firstName" jdbcType="VARCHAR" />
    <result column="last_name" property="lastName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="job_id" property="jobId" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="DOUBLE" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="hire_date" property="hireDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    employee_id, first_name, last_name, email, phone_number, job_id, salary, department_id, 
    hire_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.itcast.entity.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ssm_crud.employees
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ssm_crud.employees
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ssm_crud.employees
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.entity.EmployeeExample" >
    delete from ssm_crud.employees
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.entity.Employee" >
    insert into ssm_crud.employees (employee_id, first_name, last_name, 
      email, phone_number, job_id, 
      salary, department_id, hire_date
      )
    values (#{employeeId,jdbcType=INTEGER}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{jobId,jdbcType=VARCHAR}, 
      #{salary,jdbcType=DOUBLE}, #{departmentId,jdbcType=INTEGER}, #{hireDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.entity.Employee" >
    insert into ssm_crud.employees
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="firstName != null" >
        first_name,
      </if>
      <if test="lastName != null" >
        last_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="hireDate != null" >
        hire_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="firstName != null" >
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="hireDate != null" >
        #{hireDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.entity.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from ssm_crud.employees
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ssm_crud.employees
    <set >
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.firstName != null" >
        first_name = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null" >
        last_name = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null" >
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null" >
        salary = #{record.salary,jdbcType=DOUBLE},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.hireDate != null" >
        hire_date = #{record.hireDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ssm_crud.employees
    set employee_id = #{record.employeeId,jdbcType=INTEGER},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      last_name = #{record.lastName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      job_id = #{record.jobId,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=DOUBLE},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      hire_date = #{record.hireDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.entity.Employee" >
    update ssm_crud.employees
    <set >
      <if test="firstName != null" >
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="hireDate != null" >
        hire_date = #{hireDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.entity.Employee" >
    update ssm_crud.employees
    set first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      job_id = #{jobId,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DOUBLE},
      department_id = #{departmentId,jdbcType=INTEGER},
      hire_date = #{hireDate,jdbcType=TIMESTAMP}
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  
  <resultMap type="cn.itcast.entity.Employee" id="WithDeptNameAndJobTitleResultMap">
  		<id column="employee_id" property="employeeId" jdbcType="INTEGER" />
	    <result column="first_name" property="firstName" jdbcType="VARCHAR" />
	    <result column="last_name" property="lastName" jdbcType="VARCHAR" />
	    <result column="email" property="email" jdbcType="VARCHAR" />
	    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
	    <result column="job_id" property="jobId" jdbcType="VARCHAR" />
	    <result column="salary" property="salary" jdbcType="DOUBLE" />
	    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
	    <result column="hire_date" property="hireDate" jdbcType="TIMESTAMP" />
	    
	    <!-- 设置关联部门对象  -->
	    <association property="dept" javaType="cn.itcast.entity.Department">
	    	<id column="department_id" property="departmentId" jdbcType="INTEGER" />
    		<result column="department_name" property="departmentName" jdbcType="VARCHAR" />
	    </association>
	    
	    <!-- 设置关联工种对象 -->
	    <association property="job" javaType="cn.itcast.entity.Job">
	    	<id column="job_id" property="jobId" jdbcType="VARCHAR" />
    		<result column="job_title" property="jobTitle" jdbcType="VARCHAR" />
	    </association>
  </resultMap>
  
  <select id="findAllWithDeptNameAndJobTitle" resultMap="WithDeptNameAndJobTitleResultMap">
  		select * from ssm_crud.employees e
  		left join ssm_crud.departments d on e.department_id = d.department_id
  		left join ssm_crud.jobs j on e.job_id = j.job_id
  </select>
  
  <delete id="batchDeleteByIds" >
  		delete from ssm_crud.employees where employee_id in
  		<foreach collection="array" separator="," item="empId" open="(" close=")">
  			#{empId}
  		</foreach>
  </delete>
</mapper>